CREATE TABLE region (r_regionkey INTEGER, r_name STRING, r_comment STRING) AS HEAP

CREATE TABLE nation (n_nationkey INTEGER, n_name STRING, n_regionkey INTEGER, n_comment STRING) AS HEAP

CREATE TABLE part (p_partkey INTEGER, p_name STRING, p_mfgr STRING, p_brand STRING, p_type STRING, p_size INTEGER, p_container STRING, p_retailprice DOUBLE, p_comment STRING) AS HEAP

CREATE TABLE supplier (s_suppkey INTEGER, s_name STRING, s_address STRING, s_nationkey INTEGER, s_phone STRING, s_acctbal DOUBLE, s_comment STRING) AS HEAP

CREATE TABLE partsupp (ps_partkey INTEGER, ps_suppkey INTEGER, ps_availqty INTEGER, ps_supplycost DOUBLE, ps_comment STRING) AS HEAP

CREATE TABLE customer (c_custkey INTEGER, c_name STRING, c_address STRING, c_nationkey INTEGER, c_phone STRING, c_acctbal DOUBLE, c_mktsegment STRING, c_comment STRING) AS HEAP

CREATE TABLE orders (o_orderkey INTEGER, o_custkey INTEGER, o_orderstatus STRING, o_totalprice DOUBLE, o_orderdate STRING, o_orderpriority STRING, o_clerk STRING, o_shippriority INTEGER, o_comment STRING) AS HEAP

CREATE TABLE lineitem (l_orderkey INTEGER,l_partkey INTEGER,l_suppkey INTEGER,l_linenumber INTEGER,l_quantity DOUBLE,l_extendedprice DOUBLE,l_discount DOUBLE,
l_tax DOUBLE,l_returnflag STRING,l_linestatus STRING,l_shipdate STRING,l_commitdate STRING,l_receiptdate STRING,l_shipinstruct STRING,l_shipmode STRING,l_comment STRING) 
AS HEAP

INSERT 'region' INTO region
INSERT 'nation' INTO nation
INSERT 'supplier' INTO supplier
INSERT 'part' INTO part
INSERT 'partsupp' INTO partsupp
INSERT 'customer' INTO customer
INSERT 'orders' INTO orders
INSERT 'lineitem' INTO lineitem

SELECT r.r_name, r.r_regionkey FROM region AS r WHERE (r.r_regionkey < 100)

SET OUTPUT NONE
SET OUTPUT STDOUT
SET OUTPUT 'results.txt'

DROP TABLE region

SELECT SUM DISTINCT (a.b + b), d.g FROM a AS b WHERE ('foo' > this.that OR 2 = 3) AND (12 > 5) GROUP BY a.f, c.d, g.f

SELECT SUM(ps.ps_suppkey) FROM partsupp AS ps WHERE (ps.ps_suppkey > 2500) GROUP BY ps.ps_partkey

SELECT ps.ps_comment, ps.ps_availqty,ps.ps_suppkey, ps.ps_supplycost FROM partsupp AS ps WHERE (ps.ps_supplycost < 1.03) AND(ps.ps_suppkey = 10)
SELECT ps_suppkey FROM partsupp AS ps, supplier AS s WHERE (ps_supplycost < 1.03) AND(ps_suppkey = 10) AND (ps_suppkey=s_suppkey)
SELECT ps_suppkey FROM partsupp AS ps, supplier AS s WHERE (ps_supplycost < 1.03) AND(ps_suppkey = 10) AND (s_suppkey=10 OR s_name='JAPAN')

SELECT ps.ps_suppkey FROM part AS p, partsupp AS ps, supplier AS s, nation AS n, region AS r WHERE (p.p_partkey=ps.ps_partkey) AND (p.p_size = 2) AND (s.s_suppkey = ps.ps_suppkey) AND (s.s_nationkey = n.n_nationkey) AND (n.n_regionkey = r.r_regionkey) AND (r.r_name = 'AMERICA')

SELECT ps.ps_suppkey FROM part AS p, partsupp AS ps, supplier AS s WHERE (s.s_suppkey = ps.ps_suppkey) AND (p.p_partkey=ps.ps_partkey) AND (p.p_size = 2)

(q1) ************************************************ DONE ===
SELECT SUM (ps.ps_supplycost)
FROM part AS p, supplier AS s, partsupp AS ps
WHERE (p.p_partkey = ps.ps_partkey) AND
	  (s.s_suppkey = ps.ps_suppkey) AND
	  (s.s_acctbal > 2500.0)

ANSWER: 2.74243e+08 (5.91 sec)

============================================================

(q2) ************************************************ DONE ===
SELECT SUM (c.c_acctbal)
FROM customer AS c, orders AS o
WHERE (c.c_custkey = o.o_custkey) AND
	  (o.o_totalprice < 10000.0)

ANSWER: 1.33123e+08 (17.31 sec)  (Answer matches)

============================================================

(q3) ************************************************ DONE ===
SELECT l.l_orderkey, l.l_partkey, l.l_suppkey
FROM lineitem AS l
WHERE (l.l_returnflag = 'R') AND 
	  (l.l_discount < 0.04 OR l.l_shipmode = 'MAIL') AND
	  (l.l_orderkey > 5000) AND (l.l_orderkey < 6000)

ANSWER: 109 rows in set (17.47 sec) (**Actual 96)

===========================================================

(q4) ************************************************ DONE ===
SELECT ps.ps_partkey, ps.ps_suppkey, ps.ps_availqty 
FROM partsupp AS ps 
WHERE (ps.ps_partkey < 100) AND (ps.ps_suppkey < 50)

ANSWER: 48 rows (1.95 sec)

==========================================================

(q5) ************************************************ DONE ===

SELECT SUM (l.l_discount)
FROM customer AS c, orders AS o, lineitem AS l
WHERE (c.c_custkey = o.o_custkey) AND
	  (o.o_orderkey = l.l_orderkey) AND
	  (c.c_name = 'Customer#000070919') AND
	  (l.l_quantity > 30.0) AND (l.l_discount < 0.03)

ANSWER: 0.0075 (55.4 sec) *****  [0.03]
===========================================================

(q6) ************************************************ DONE ===
SELECT DISTINCT s.s_name
FROM supplier AS s, part AS p, partsupp AS ps
WHERE (s.s_suppkey = ps.ps_suppkey) AND
	  (p.p_partkey = ps.ps_partkey) AND
	  (p.p_mfgr = 'Manufacturer#4') AND
	  (ps.ps_supplycost < 350.0)


ANSWER: 9964 rows (1.51 sec)
===========================================================
(q7) ************************************************ DONE ===

SELECT SUM (l.l_extendedprice * (1 - l.l_discount)), l.l_orderkey, o.o_orderdate, o.o_shippriority
FROM customer AS c, orders AS o, lineitem AS l 
WHERE (c.c_mktsegment = 'BUILDING') AND 
      (c.c_custkey = o.o_custkey) AND (l.l_orderkey = o.o_orderkey) AND
	  (l.l_orderkey < 100 OR o.o_orderkey < 100)
GROUP BY l.l_orderkey, o.o_orderdate, o.o_shippriority

ANSWER: 7 rows (41.2 sec)

(q1) ************************************************ DONE ===

SELECT SUM (ps.ps_supplycost), s.s_suppkey 
FROM part AS p, supplier AS s, partsupp AS ps 
WHERE (p.p_partkey = ps.ps_partkey) AND 
	  (s.s_suppkey = ps.ps_suppkey) AND (s.s_acctbal > 2500.0) 
GROUP BY s.s_suppkey
	
(q2) ************************************************ DONE ===

SELECT SUM (c.c_acctbal),c.c_name 
FROM customer AS c, orders AS o 
WHERE (c.c_custkey = o.o_custkey) AND (o.o_totalprice < 10000.0) 
GROUP BY c.c_name

(q3) ************************************************ DONE ===

SELECT l.l_orderkey, l.l_partkey, l.l_suppkey 
FROM lineitem AS l 
WHERE (l.l_returnflag = 'R') AND 
      (l.l_discount < 0.04 OR l.l_shipmode = 'MAIL')

(Query returned 671392 records)

(q4) ************************************************ DONE ===

SELECT DISTINCT c1.c_name, c1.c_address, c1.c_acctbal 
FROM customer AS c1, customer AS c2 
WHERE (c1.c_nationkey = c2.c_nationkey) AND
	  (c1.c_name ='Customer#000070919')

(q5) ************************************************ DONE ===

SELECT l.l_orderkey 
FROM lineitem AS l 
WHERE (l.l_quantity > 30.0)

(q6) ************************************************ DONE ===

SELECT DISTINCT c.c_name 
FROM lineitem AS l, orders AS o, customer AS c, nation AS n, region AS r 
WHERE (l.l_orderkey = o.o_orderkey) AND
      (o.o_custkey = c.c_custkey) AND 
	  (c.c_nationkey = n.n_nationkey) AND
	  (n.n_regionkey = r.r_regionkey)

(q7) ************************************************ DONE ===

SELECT l.l_discount 
FROM lineitem AS l, orders AS o, customer AS c, nation AS n, region AS r 
WHERE (l.l_orderkey = o.o_orderkey) AND 
	  (o.o_custkey = c.c_custkey) AND 
	  (c.c_nationkey = n.n_nationkey) AND 
	  (n.n_regionkey = r.r_regionkey) AND 
	  (r.r_regionkey = 1) AND (o.orderkey < 10000)

(Segmentation Fault) (Always)

(q8) ************************************************ DONE ===

SELECT SUM (l.l_discount) 
FROM customer AS c, orders AS o, lineitem AS l
WHERE (c.c_custkey = o.o_custkey) AND (o.o_orderkey = l.l_orderkey) AND
	  (c.c_name = 'Customer#000070919') AND (l.l_quantity > 30.0) AND
	  (l.l_discount < 0.03)

(pointer being freed was not allocated) **Update (Segmentation Fault after result) (SOMETIMES)

(q9) ************************************************ DONE ===

SELECT SUM (l.l_extendedprice * l.l_discount) 
FROM lineitem AS l 
WHERE (l.l_discount<0.07) AND (l.l_quantity < 24.0)